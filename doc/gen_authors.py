from __future__ import print_function

import sys
import requests
import getpass

try:
    # With authentication: up to 5000 requests per hour.
    print("user:", file=sys.stderr)
    user = input()
    passwd = getpass.getpass()
    auth = (user, passwd)
except IndexError:
    # Without authentication: up to 60 requests per hour.
    auth = None

ROW_SIZE = 7


def group(it, size):
    gr = []
    for ele in it:
        gr.append(ele)
        if len(gr) == size:
            yield gr
            gr = []
    if len(gr) != 0:
        yield gr


def get_contributors():
    """Requires the push right"""
    contributors = []
    for page in [1, 2]:  # 30 per page
        contributors.extend(requests.get(
            "https://api.github.com/teams/11523/members?page=%d" % page,
            auth=auth).json())
    return contributors


def key(c):
    return c['login'].lower()


def get_profile(login):
    return requests.get("https://api.github.com/users/%s" % login,
                        auth=auth).json()


contributors = sorted(get_contributors(), key=key)

print(".. raw :: html\n")
print("    <!-- Generated by gen_authors.py -->")
print("    <table>")
print("    <col style='width:%d%%' span='%d'>"
      % (int(100 / ROW_SIZE), ROW_SIZE))
print("    <style>")
print("      img.avatar {border-radius: 10px;}")
print("      td {vertical-align: top;}")
print("    </style>")
for row in group(contributors, size=ROW_SIZE):
    print("    <tr>")
    for contributor in row:
        print("    <td>")

        if contributor["type"] == "Anonymous":
            print("    <p>", contributor["name"], "</p>")
        else:
            login = contributor["login"]
            profile = get_profile(login)
            name = profile["name"] if profile["name"] is not None else login

            print("    <a href='%s'><img src='%s' class='avatar' /></a> <br />"
                  % (profile["html_url"], profile["avatar_url"]))
            print("    <p>%s</p>" % name)

        print("    </td>")
    print("    </tr>")
print("    </table>")
